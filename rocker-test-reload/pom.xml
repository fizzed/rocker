<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <artifactId>rocker-test-reload</artifactId>
    <name>rocker-test-reload</name>
    <packaging>jar</packaging>

    <parent>
        <groupId>com.fizzed</groupId>
        <artifactId>rocker</artifactId>
        <version>2.2.1-SNAPSHOT</version>
    </parent>

    <properties>
        <maven.deploy.skip>true</maven.deploy.skip>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>com.fizzed</groupId>
                <artifactId>rocker-maven-plugin</artifactId>
                <version>${project.version}</version>
                <executions>
                    <execution>
                        <id>generate-rocker-templates</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <javaVersion>${java.version}</javaVersion>
                            <templateDirectory>${basedir}/src/test/java</templateDirectory>
                            <outputDirectory>${basedir}/target/generated-test-sources/rocker</outputDirectory>
                            <classDirectory>${basedir}/target/test-classes</classDirectory>
                            <addAsTestSources>true</addAsTestSources>
                            <discardLogicWhitespace>true</discardLogicWhitespace>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- adjusts how surefire plugin manipulates classpath for testing -->
            <!-- only way to get compiling & reloading to work like we expect -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19</version>
                <configuration>
                    <useManifestOnlyJar>false</useManifestOnlyJar>
                </configuration>
            </plugin>
        </plugins>
    </build>
    
    <profiles>
        <profile>
            <id>exec-reloadtest</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.3.2</version>
                        <executions>
                            <execution>
                                <id>exec-run</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>com.fizzed</groupId>
            <artifactId>rocker-runtime</artifactId>
        </dependency>
        
        <dependency>
            <groupId>com.fizzed</groupId>
            <artifactId>rocker-compiler</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!-- test -->
        
        <dependency>
            <groupId>io.undertow</groupId>
            <artifactId>undertow-core</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        
    </dependencies>
</project>